"""models updated

Revision ID: 2983b750a7ff
Revises: 1ef37c752fb7
Create Date: 2023-06-19 10:02:03.589959

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2983b750a7ff'
down_revision = '1ef37c752fb7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_customers_email'), ['email'])

    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('reservations', schema=None) as batch_op:
        batch_op.alter_column('location_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_reservations_location_id'), ['location_id', 'customer_id', 'reservation_date'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reservations', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_reservations_location_id'), type_='unique')
        batch_op.alter_column('customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('location_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_customers_email'), type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)

    # ### end Alembic commands ###
